name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The next version to set"
jobs:
  bump:
    runs-on: ubuntu-20.04
    environment: release
    timeout-minutes: 5
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Git Config
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Bump the version
        run: |
          current=$(python setup.py --version)
          sed -i "s/version = \"$current\"/version = \"${{inputs.version}}\"/" pyproject.toml
          git tag -a ${{inputs.version}} -m "bump ${{inputs.version}}"
          git add .
          git commit -a -m "bump ${{inputs.version}}"
          git push origin
          git push origin --tags

  build:
    needs: [bump]
    uses: ./.github/workflows/build.yml

  publish:
    needs: [build]
    runs-on: ubuntu-20.04
    environment: release
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Download the assets
        uses: actions/download-artifact@v4
        with:
          name: all-dist-${{ github.run_id }}
          path: dist/

      - name: Annotate the dist files
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          NAME=$(gh api users/$GITHUB_ACTOR --jq '.name')
          cd dist
          export PAPERTRAIL="../papertrail.txt"
          echo "Product: Test Annotated Project" > $PAPERTRAIL
          echo "Version: $GITHUB_REF_NAME" >> $PAPERTRAIL
          echo "Releaser: $NAME"  >> $PAPERTRAIL
          echo "Build Source: GitHub Actions"
          echo "Build Number: $GITHUB_RUN_ID"
          for filename in *; do
              SHA=$(shasum -a 256 $filename | awk '{print $1;}')
              echo "Filename: $filename"  >> $PAPERTRAIL
              echo "SHASUM: $SHA"  >> $PAPERTRAIL
          done

      - name: Publish the assets
        run: echo "published!"

      - name: Create a draft release 
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          echo "$GITHUB_RUN_ID" > release_run_id.txt
          gh release create ${{ inputs.version }} --verify-tag --title ${{ inputs.version }} --notes ""
          gh release upload ${{ inputs.version }} release_run_id.txt 
          gh release upload ${{ inputs.version }} papertrail.txt

    
